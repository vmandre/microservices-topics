spring.application.name=currency-exchange
spring.config.import=optional:configserver:http://localhost:8888/
server.port=8000

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=sa 

spring.h2.console.enabled=true

#https://www.baeldung.com/spring-boot-h2-database
#4.2. Hibernate and data.sql
# By default, the data.sql script executes before Hibernate initialization.
# This aligns the script-based initialization with other database migration tools such as Flyway and Liquibase.
# As we're recreating the schema generated by Hibernate each time, we need to set an additional property:
spring.jpa.defer-datasource-initialization=true


eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# setup for resilience(retries). Sets the quantity of times the service will try to call http://localhost:8080/some-dummy-url
resilience4j.retry.instances.sample-api.maxRetryAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

#resilience4j.bulkhead.instances.default.maxConcorrentCalls=10 -- default is for all instances
resilience4j.bulkhead.instances.sample-api.maxConcorrentCalls=10


#sampling - 1.0 means every request (100% of the requests for testing)
management.endpoints.web.exposure.include=*
management.tracing.sampling.probability=1.0
management.metrics.distribution.percentiles-histogram.greeting=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
